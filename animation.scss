/*
* jQuery Mobile Framework
* Copyright (c) jQuery Project
* Dual licensed under the MIT (MIT-LICENSE.txt) or GPL (GPL-LICENSE.txt) licenses.
*/
.in {
	animation-timing-function: ease-out;
	animation-duration: 350ms;
}
.out {
	animation-timing-function: ease-in;
	animation-duration: 225ms;
}
@keyframes fadein {
    from { opacity: 0; }
    to { opacity: 1; }
}
@keyframes fadeout {
    from { opacity: 1; }
    to { opacity: 0; }
}
.fade.out {
	opacity: 0;
	animation-duration: 125ms;
	animation-name: fadeout;
}
.fade.in {
	opacity: 1;
	animation-duration: 225ms;
	animation-name: fadein;
}
.pop {
	transform-origin: 50% 50%;
}
.pop.in {
	transform: scale(1);
	animation-name: popin;
	animation-duration: 350ms;
  opacity: 1;
}
.pop.out {
	animation-name: fadeout;
	animation-duration: 100ms;
	opacity: 0;
}
.pop.in.reverse {
	animation-name: fadein;
}
.pop.out.reverse {
	transform: scale(.8);
	animation-name: popout;
}
@keyframes popin {
    from {
        transform: scale(.8);
        opacity: 0;
    }
    to {
        transform: scale(1);
        opacity: 1;
    }
}
@keyframes popout {
    from {
        transform: scale(1);
        opacity: 1;
    }
    to {
        transform: scale(.8);
        opacity: 0;
    }
}
/* keyframes for slidein from sides */
@keyframes slideinfromright {
    from { transform: translateX(100%); }
    to { transform: translateX(0); }
}
@keyframes slideinfromleft {
    from { transform: translateX(-100%); }
    to { transform: translateX(0); }
}
/* keyframes for slideout to sides */
@keyframes slideouttoleft {
    from { transform: translateX(0); }
    to { transform: translateX(-100%); }
}
@keyframes slideouttoright {
    from { transform: translateX(0); }
    to { transform: translateX(100%); }
}
.slide.out, .slide.in {
	animation-timing-function: ease-out;
	animation-duration: 350ms;
}
.slide.out {
	transform: translateX(-100%);
	animation-name: slideouttoleft;
}
.slide.in {
	transform: translateX(0);
	animation-name: slideinfromright;
}
.slide.out.reverse {
	transform: translateX(100%);
	animation-name: slideouttoright;
}
.slide.in.reverse {
	transform: translateX(0);
	animation-name: slideinfromleft;
}
.slidefade.out {
	transform: translateX(-100%);
	animation-name: slideouttoleft;
	animation-duration: 225ms;
}
.slidefade.in {
	transform: translateX(0);
	animation-name: fadein;
	animation-duration: 200ms;
}
.slidefade.out.reverse {
	transform: translateX(100%);
	animation-name: slideouttoright;
	animation-duration: 200ms;
}
.slidefade.in.reverse {
	transform: translateX(0);
	animation-name: fadein;
	animation-duration: 200ms;
}
/* slide down */
.slidedown.out {
	animation-name: fadeout;
	animation-duration: 100ms;
}
.slidedown.in {
	transform: translateY(0);
	animation-name: slideinfromtop;
	animation-duration: 250ms;
}
.slidedown.in.reverse {
	animation-name: fadein;
	animation-duration: 150ms;
}
.slidedown.out.reverse {
	transform: translateY(-100%);
	animation-name: slideouttotop;
	animation-duration: 200ms;
}
@keyframes slideinfromtop {
    from { transform: translateY(-100%); }
    to { transform: translateY(0); }
}
@keyframes slideouttotop {
    from { transform: translateY(0); }
    to { transform: translateY(-100%); }
}
/* slide up */
.slideup.out {
	animation-name: fadeout;
	animation-duration: 100ms;
}
.slideup.in {
	transform: translateY(0);
	animation-name: slideinfrombottom;
	animation-duration: 250ms;
}
.slideup.in.reverse {
	animation-name: fadein;
	animation-duration: 150ms;
}
.slideup.out.reverse {
	transform: translateY(100%);
	animation-name: slideouttobottom;
	animation-duration: 200ms;
}
@keyframes slideinfrombottom {
    from { transform: translateY(100%); }
    to { transform: translateY(0); }
}
@keyframes slideouttobottom {
    from { transform: translateY(0); }
    to { transform: translateY(100%); }
}
/* The properties in this rule are only necessary for the 'flip' transition.
 * We need specify the perspective to create a projection matrix. This will add
 * some depth as the element flips. The depth number represents the distance of
 * the viewer from the z-plane. According to the CSS3 spec, 1000 is a moderate
 * value.
 */
.viewport-flip {
	perspective: 1000;
	position: absolute;
}
.flip {
	/* Needed to work around an iOS 3.1 bug that causes listview thumbs to disappear when -webkit-visibility:hidden is used. */
	backface-visibility: hidden;
	transform: translateX(0);
}
.flip.out {
	transform: rotateY(-90deg) scale(.9);
	animation-name: flipouttoleft;
	animation-duration: 175ms;
}
.flip.in {
	animation-name: flipintoright;
	animation-duration: 225ms;
}
.flip.out.reverse {
	transform: rotateY(90deg) scale(.9);
	animation-name: flipouttoright;
}
.flip.in.reverse {
	animation-name: flipintoleft;
}
@keyframes flipouttoleft {
    from { transform: rotateY(0); }
    to { transform: rotateY(-90deg) scale(.9); }
}
@keyframes flipouttoright {
    from { transform: rotateY(0); }
    to { transform: rotateY(90deg) scale(.9); }
}
@keyframes flipintoleft {
    from { transform: rotateY(-90deg) scale(.9); }
    to { transform: rotateY(0); }
}
@keyframes flipintoright {
    from { transform: rotateY(90deg) scale(.9); }
    to { transform: rotateY(0); }
}
/* The properties in this rule are only necessary for the 'flip' transition.
 * We need specify the perspective to create a projection matrix. This will add
 * some depth as the element flips. The depth number represents the distance of
 * the viewer from the z-plane. According to the CSS3 spec, 1000 is a moderate
 * value.
 */
.viewport-turn {
	perspective: 200px;
	position: absolute;
}
.turn {
	backface-visibility :hidden;
	transform: translateX(0);
	transform-origin: 0;
}
.turn.out {
	transform: rotateY(-90deg) scale(.9);
	animation-name: flipouttoleft;
	animation-duration: 125ms;
}
.turn.in {
	animation-name: flipintoright;
	animation-duration: 250ms;
	
}
.turn.out.reverse {
	transform: rotateY(90deg) scale(.9);
	animation-name: flipouttoright;
}
.turn.in.reverse {
	animation-name: flipintoleft;
}
@keyframes flipouttoleft {
    from { transform: rotateY(0); }
    to { transform: rotateY(-90deg) scale(.9); }
}
@keyframes flipouttoright {
    from { transform: rotateY(0); }
    to { transform: rotateY(90deg) scale(.9); }
}
@keyframes flipintoleft {
    from { transform: rotateY(-90deg) scale(.9); }
    to { transform: rotateY(0); }
}
@keyframes flipintoright {
    from { transform: rotateY(90deg) scale(.9); }
    to { transform: rotateY(0); }
}
/* flow transition */
.flow {
	transform-origin: 50% 30%;	
}
.flow.out {
	transform: translateX(-100%) scale(.7);
	animation-name: flowouttoleft;
	animation-timing-function: ease;
	animation-duration: 350ms;
}
.flow.in {
	transform: translateX(0) scale(1);
	animation-name: flowinfromright;
	animation-timing-function: ease;
	animation-duration: 350ms;
}
.flow.out.reverse {
	transform: translateX(100%);
	animation-name: flowouttoright;
}
.flow.in.reverse {
	animation-name: flowinfromleft;
}
@keyframes flowouttoleft {
    0% { transform: translateX(0) scale(1); }
	60%, 70% { transform: translateX(0) scale(.7); }
    100% { transform:  translateX(-100%) scale(.7); }
}
@keyframes flowouttoright {
    0% { transform: translateX(0) scale(1); }
	60%, 70% { transform: translateX(0) scale(.7); }
    100% { transform:  translateX(100%) scale(.7); }
}
@keyframes flowinfromleft {
    0% { transform: translateX(-100%) scale(.7); }
	30%, 40% { transform: translateX(0) scale(.7); }
    100% { transform: translateX(0) scale(1); }
}
@keyframes flowinfromright {
    0% { transform: translateX(100%) scale(.7); }
	30%, 40% { transform: translateX(0) scale(.7); }
    100% { transform: translateX(0) scale(1); }
}
// animte扩展动画
.animated {
  animation-duration: .8s;
  animation-fill-mode: both;
}
.bounceInLeft {
  animation-name: bounceInLeft;
}
@keyframes bounceInLeft {
  0%,100%,60%,75%,90% {
    transition-timing-function: cubic-bezier(0.215,.61,.355,1)
  }

  0% {
    opacity: 0;
    transform: translate3d(-3000px,0,0)
  }

  60% {
    opacity: 1;
    transform: translate3d(25px,0,0)
  }

  75% {
    transform: translate3d(-10px,0,0)
  }

  90% {
    transform: translate3d(5px,0,0)
  }

  100% {
    transform: none
  }
}
.fadeInUp {
    animation-name: fadeInUp
}
@keyframes fadeInUp {
  0% {
    opacity: 0;
    transform: translate3d(0,100%,0)
  }

  100% {
    opacity: 1;
    transform: none
  }
}
.fadeInDown {
  animation-name: fadeInDown
}

@keyframes fadeInDown {
  0% {
    opacity: 0;
    transform: translate3d(0,-100%,0)
  }

  100% {
    opacity: 1;
    transform: none
  }
}
.zoomIn {
  animation-name: zoomIn
}

@keyframes zoomIn {
  0% {
    opacity: 0;
    transform: scale3d(.3,.3,.3)
  }

  50% {
    opacity: 1
  }
}